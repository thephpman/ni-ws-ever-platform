{"ast":null,"code":"var _jsxFileName = \"D:\\\\root\\\\work\\\\code\\\\ni-ws-ever-platform\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const [input, setInput] = useState('');\n  const [categoryInput, setCategoryInput] = useState(''); // New state for category input\n  const [categories, setCategories] = useState(['General']); // Categories state\n\n  // Function to add a new to-do\n  const addTodo = e => {\n    e.preventDefault();\n    if (input.trim()) {\n      setTodos([...todos, {\n        text: input,\n        completed: false,\n        category: categoryInput || 'General'\n      }]);\n      setInput('');\n      setCategoryInput('');\n    }\n  };\n\n  // Function to add a new category\n  const addCategory = e => {\n    e.preventDefault();\n    if (categoryInput.trim() && !categories.includes(categoryInput)) {\n      setCategories([...categories, categoryInput]);\n      setCategoryInput(''); // Clear input after adding\n    }\n  };\n\n  // Function to toggle task completion\n  const toggleComplete = index => {\n    const newTodos = todos.map((todo, i) => {\n      if (i === index) {\n        return {\n          ...todo,\n          completed: !todo.completed\n        };\n      }\n      return todo;\n    });\n    setTodos(newTodos);\n  };\n\n  // Function to delete a to-do\n  const deleteTodo = index => {\n    const newTodos = todos.filter((_, i) => i !== index);\n    setTodos(newTodos);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"To-Do List App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addCategory,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: categoryInput,\n        onChange: e => setCategoryInput(e.target.value),\n        placeholder: \"Add new category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addTodo,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"Add a new task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setCategoryInput(e.target.value),\n        children: categories.map((category, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: category,\n          children: category\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todos.map((todo, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: todo.completed ? 'completed' : '',\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => toggleComplete(index),\n          children: [todo.text, \" (\", todo.category, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteTodo(index),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ETJ5La3nZEoAIcihdbx2cg7o6Js=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","todos","setTodos","input","setInput","categoryInput","setCategoryInput","categories","setCategories","addTodo","e","preventDefault","trim","text","completed","category","addCategory","includes","toggleComplete","index","newTodos","map","todo","i","deleteTodo","filter","_","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["D:/root/work/code/ni-ws-ever-platform/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [todos, setTodos] = useState([]);\r\n  const [input, setInput] = useState('');\r\n  const [categoryInput, setCategoryInput] = useState(''); // New state for category input\r\n  const [categories, setCategories] = useState(['General']); // Categories state\r\n\r\n  // Function to add a new to-do\r\n  const addTodo = (e) => {\r\n    e.preventDefault();\r\n    if (input.trim()) {\r\n      setTodos([...todos, { text: input, completed: false, category: categoryInput || 'General' }]);\r\n      setInput('');\r\n      setCategoryInput('');\r\n    }\r\n  };\r\n\r\n  // Function to add a new category\r\n  const addCategory = (e) => {\r\n    e.preventDefault();\r\n    if (categoryInput.trim() && !categories.includes(categoryInput)) {\r\n      setCategories([...categories, categoryInput]);\r\n      setCategoryInput(''); // Clear input after adding\r\n    }\r\n  };\r\n\r\n  // Function to toggle task completion\r\n  const toggleComplete = (index) => {\r\n    const newTodos = todos.map((todo, i) => {\r\n      if (i === index) {\r\n        return { ...todo, completed: !todo.completed };\r\n      }\r\n      return todo;\r\n    });\r\n    setTodos(newTodos);\r\n  };\r\n\r\n  // Function to delete a to-do\r\n  const deleteTodo = (index) => {\r\n    const newTodos = todos.filter((_, i) => i !== index);\r\n    setTodos(newTodos);\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <h1>To-Do List App</h1>\r\n      \r\n      {/* Input form to add new category */}\r\n      <form onSubmit={addCategory}>\r\n        <input\r\n          type=\"text\"\r\n          value={categoryInput}\r\n          onChange={(e) => setCategoryInput(e.target.value)}\r\n          placeholder=\"Add new category\"\r\n        />\r\n        <button type=\"submit\">Add Category</button>\r\n      </form>\r\n\r\n      {/* Input form to add new to-do */}\r\n      <form onSubmit={addTodo}>\r\n        <input\r\n          type=\"text\"\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n          placeholder=\"Add a new task\"\r\n        />\r\n        <select onChange={(e) => setCategoryInput(e.target.value)}>\r\n          {categories.map((category, index) => (\r\n            <option key={index} value={category}>\r\n              {category}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <button type=\"submit\">Add Task</button>\r\n      </form>\r\n\r\n      {/* Display list of to-dos */}\r\n      <ul>\r\n        {todos.map((todo, index) => (\r\n          <li key={index} className={todo.completed ? 'completed' : ''}>\r\n            <span onClick={() => toggleComplete(index)}>\r\n              {todo.text} ({todo.category})\r\n            </span>\r\n            <button onClick={() => deleteTodo(index)}>Delete</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}